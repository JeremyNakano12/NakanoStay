<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.puce.NakanoStay.services.RoomServiceTest" tests="44" skipped="0" failures="0" errors="0" timestamp="2025-08-19T17:05:06.835Z" hostname="JEREMYNAKANO" time="0.112">
  <properties/>
  <testcase name="should throw ValidationException when updating with invalid data()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.049"/>
  <testcase name="should throw ValidationException when room type is empty()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should handle booking with same room in multiple details()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.006"/>
  <testcase name="should throw ValidationException when start date is after end date()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw NotFoundException when room not found by id()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should save a valid room()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should update room with null room type()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should ignore cancelled bookings in availability()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should return all rooms()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should delete room successfully()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.0"/>
  <testcase name="should get a room by id()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.0"/>
  <testcase name="should make room available successfully()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should return empty list when hotel has no rooms()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw NotFoundException when making non-existent room available()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should save unavailable room()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw ValidationException when hotel id is zero()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should handle booking that starts on boundary date()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should handle single day availability request()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw ConflictException when updating with duplicate room number()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should return empty list when no rooms exist()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.0"/>
  <testcase name="should throw ValidationException when price has more than 2 decimals()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw ValidationException when room number is too long()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should throw NotFoundException when updating non-existent room()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should throw ValidationException when room type is too long()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should handle booking that extends beyond requested range()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should handle multiple overlapping bookings()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw ConflictException when room number already exists in hotel()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should throw NotFoundException when making non-existent room unavailable()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw ConflictException when making already available room available()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should make room unavailable successfully()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.0"/>
  <testcase name="should throw ValidationException when price has more than 10 digits()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should return full availability when no bookings exist()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should update room successfully()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.0"/>
  <testcase name="should throw NotFoundException when deleting non-existent room()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should throw NotFoundException when room does not exist for availability()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should throw ValidationException when start date is in the past()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should get rooms by hotel()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should save room with null room type()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw ValidationException when room number is blank()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should return availability with occupied ranges when bookings exist()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should throw ConflictException when making already unavailable room unavailable()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should throw ValidationException when price is negative()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <testcase name="should save room with zero price()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.002"/>
  <testcase name="should handle booking that ends on boundary date()" classname="com.puce.NakanoStay.services.RoomServiceTest" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
